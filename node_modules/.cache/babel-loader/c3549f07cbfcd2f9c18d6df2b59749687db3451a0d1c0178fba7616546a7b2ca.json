{"ast":null,"code":"var _jsxFileName = \"/home/sbrodziansky/Repositories/wiremock-gui/src/components/DarkModeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Check localStorage or system preference\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode !== null) {\n      return savedMode === 'true';\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    // Apply dark mode class to document\n    if (darkMode) {\n      document.documentElement.setAttribute('data-bs-theme', 'dark');\n    } else {\n      document.documentElement.setAttribute('data-bs-theme', 'light');\n    }\n    // Save preference\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: `bi ${darkMode ? 'bi-moon-stars-fill' : 'bi-sun-fill'} me-2`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"switch\",\n      id: \"dark-mode-switch\",\n      checked: darkMode,\n      onChange: toggleDarkMode,\n      label: darkMode ? 'Dark' : 'Light'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(DarkModeToggle, \"171I09iGaj5I73seP4X0LEzZ39w=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useState","useEffect","Form","jsxDEV","_jsxDEV","DarkModeToggle","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","window","matchMedia","matches","document","documentElement","setAttribute","setItem","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","id","checked","onChange","label","_c","$RefreshReg$"],"sources":["/home/sbrodziansky/Repositories/wiremock-gui/src/components/DarkModeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\n\nconst DarkModeToggle = () => {\n    const [darkMode, setDarkMode] = useState(() => {\n        // Check localStorage or system preference\n        const savedMode = localStorage.getItem('darkMode');\n        if (savedMode !== null) {\n            return savedMode === 'true';\n        }\n        return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    });\n\n    useEffect(() => {\n        // Apply dark mode class to document\n        if (darkMode) {\n            document.documentElement.setAttribute('data-bs-theme', 'dark');\n        } else {\n            document.documentElement.setAttribute('data-bs-theme', 'light');\n        }\n        // Save preference\n        localStorage.setItem('darkMode', darkMode);\n    }, [darkMode]);\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <div className=\"d-flex align-items-center\">\n            <i className={`bi ${darkMode ? 'bi-moon-stars-fill' : 'bi-sun-fill'} me-2`}></i>\n            <Form.Check \n                type=\"switch\"\n                id=\"dark-mode-switch\"\n                checked={darkMode}\n                onChange={toggleDarkMode}\n                label={darkMode ? 'Dark' : 'Light'}\n            />\n        </div>\n    );\n};\n\nexport default DarkModeToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,MAAM;IAC3C;IACA,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,IAAIF,SAAS,KAAK,IAAI,EAAE;MACpB,OAAOA,SAAS,KAAK,MAAM;IAC/B;IACA,OAAOG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EACpE,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACZ;IACA,IAAIM,QAAQ,EAAE;MACVQ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;IAClE,CAAC,MAAM;MACHF,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;IACnE;IACA;IACAP,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEX,QAAQ,CAAC;EAC9C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMY,cAAc,GAAGA,CAAA,KAAM;IACzBX,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACIH,OAAA;IAAKgB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtCjB,OAAA;MAAGgB,SAAS,EAAE,MAAMb,QAAQ,GAAG,oBAAoB,GAAG,aAAa;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChFrB,OAAA,CAACF,IAAI,CAACwB,KAAK;MACPC,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAC,kBAAkB;MACrBC,OAAO,EAAEtB,QAAS;MAClBuB,QAAQ,EAAEX,cAAe;MACzBY,KAAK,EAAExB,QAAQ,GAAG,MAAM,GAAG;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CArCID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}