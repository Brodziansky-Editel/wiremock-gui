{"ast":null,"code":"var _jsxFileName = \"/home/sbrodziansky/Repositories/wiremock-gui/src/components/URLSelector.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\n\n// Parse WireMock URLs from environment variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWireMockUrls = () => {\n  const urls = [];\n  let index = 1;\n  while (true) {\n    const envValue = process.env[`REACT_APP_WIREMOCK_URL_${index}`];\n    if (!envValue) break;\n    const [name, url] = envValue.split('|');\n    if (name && url) {\n      urls.push({\n        id: index,\n        name: name.trim(),\n        url: url.trim()\n      });\n    }\n    index++;\n  }\n  return urls;\n};\nconst URLSelector = ({\n  selectedUrl,\n  onUrlChange\n}) => {\n  const urls = getWireMockUrls();\n  const handleChange = e => {\n    const selectedId = parseInt(e.target.value);\n    const selected = urls.find(u => u.id === selectedId);\n    if (selected) {\n      // Ensure URL doesn't have /requests or /mappings suffix\n      const cleanUrl = {\n        ...selected,\n        url: selected.url.replace(/\\/(requests|mappings)$/, '')\n      };\n      // Save to cookie\n      Cookies.set('selectedWireMockUrl', JSON.stringify(cleanUrl), {\n        expires: 365\n      });\n      onUrlChange(cleanUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form.Select, {\n    value: (selectedUrl === null || selectedUrl === void 0 ? void 0 : selectedUrl.id) || '',\n    onChange: handleChange,\n    size: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select WireMock Environment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), urls.map(url => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: url.id,\n      children: url.name\n    }, url.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = URLSelector;\nexport default URLSelector;\nvar _c;\n$RefreshReg$(_c, \"URLSelector\");","map":{"version":3,"names":["React","Form","Cookies","jsxDEV","_jsxDEV","getWireMockUrls","urls","index","envValue","process","env","name","url","split","push","id","trim","URLSelector","selectedUrl","onUrlChange","handleChange","e","selectedId","parseInt","target","value","selected","find","u","cleanUrl","replace","set","JSON","stringify","expires","Select","onChange","size","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/home/sbrodziansky/Repositories/wiremock-gui/src/components/URLSelector.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\n\n// Parse WireMock URLs from environment variables\nconst getWireMockUrls = () => {\n    const urls = [];\n    let index = 1;\n    \n    while (true) {\n        const envValue = process.env[`REACT_APP_WIREMOCK_URL_${index}`];\n        if (!envValue) break;\n        \n        const [name, url] = envValue.split('|');\n        if (name && url) {\n            urls.push({ id: index, name: name.trim(), url: url.trim() });\n        }\n        index++;\n    }\n    \n    return urls;\n};\n\nconst URLSelector = ({ selectedUrl, onUrlChange }) => {\n    const urls = getWireMockUrls();\n    \n    const handleChange = (e) => {\n        const selectedId = parseInt(e.target.value);\n        const selected = urls.find(u => u.id === selectedId);\n        if (selected) {\n            // Ensure URL doesn't have /requests or /mappings suffix\n            const cleanUrl = {\n                ...selected,\n                url: selected.url.replace(/\\/(requests|mappings)$/, '')\n            };\n            // Save to cookie\n            Cookies.set('selectedWireMockUrl', JSON.stringify(cleanUrl), { expires: 365 });\n            onUrlChange(cleanUrl);\n        }\n    };\n    \n    return (\n        <Form.Select \n            value={selectedUrl?.id || ''} \n            onChange={handleChange}\n            size=\"sm\"\n        >\n            <option value=\"\">Select WireMock Environment</option>\n            {urls.map(url => (\n                <option key={url.id} value={url.id}>\n                    {url.name}\n                </option>\n            ))}\n        </Form.Select>\n    );\n};\n\nexport default URLSelector;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,IAAI,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,CAAC;EAEb,OAAO,IAAI,EAAE;IACT,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAAC,0BAA0BH,KAAK,EAAE,CAAC;IAC/D,IAAI,CAACC,QAAQ,EAAE;IAEf,MAAM,CAACG,IAAI,EAAEC,GAAG,CAAC,GAAGJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC;IACvC,IAAIF,IAAI,IAAIC,GAAG,EAAE;MACbN,IAAI,CAACQ,IAAI,CAAC;QAAEC,EAAE,EAAER,KAAK;QAAEI,IAAI,EAAEA,IAAI,CAACK,IAAI,CAAC,CAAC;QAAEJ,GAAG,EAAEA,GAAG,CAACI,IAAI,CAAC;MAAE,CAAC,CAAC;IAChE;IACAT,KAAK,EAAE;EACX;EAEA,OAAOD,IAAI;AACf,CAAC;AAED,MAAMW,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAK;EAClD,MAAMb,IAAI,GAAGD,eAAe,CAAC,CAAC;EAE9B,MAAMe,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,UAAU,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3C,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKO,UAAU,CAAC;IACpD,IAAII,QAAQ,EAAE;MACV;MACA,MAAMG,QAAQ,GAAG;QACb,GAAGH,QAAQ;QACXd,GAAG,EAAEc,QAAQ,CAACd,GAAG,CAACkB,OAAO,CAAC,wBAAwB,EAAE,EAAE;MAC1D,CAAC;MACD;MACA5B,OAAO,CAAC6B,GAAG,CAAC,qBAAqB,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,EAAE;QAAEK,OAAO,EAAE;MAAI,CAAC,CAAC;MAC9Ef,WAAW,CAACU,QAAQ,CAAC;IACzB;EACJ,CAAC;EAED,oBACIzB,OAAA,CAACH,IAAI,CAACkC,MAAM;IACRV,KAAK,EAAE,CAAAP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEH,EAAE,KAAI,EAAG;IAC7BqB,QAAQ,EAAEhB,YAAa;IACvBiB,IAAI,EAAC,IAAI;IAAAC,QAAA,gBAETlC,OAAA;MAAQqB,KAAK,EAAC,EAAE;MAAAa,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDpC,IAAI,CAACqC,GAAG,CAAC/B,GAAG,iBACTR,OAAA;MAAqBqB,KAAK,EAAEb,GAAG,CAACG,EAAG;MAAAuB,QAAA,EAC9B1B,GAAG,CAACD;IAAI,GADAC,GAAG,CAACG,EAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEtB,CAAC;AAACE,EAAA,GAhCI3B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}